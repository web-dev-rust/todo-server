version: "3.7"
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: cargo run
    ports:
      - "4000:4000"
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    environment:
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar
      - AWS_REGION=julia-home
      - AWS_DYNAMODB_ENDPOINT=http://dynamodb:8000
      - DATABASE_URL=postgres://auth:secret@172.21.1.15/auth_db
      - RUST_LOG=debug
      - CARGO_HOME=/var/www/
    volumes:
      - .:/var/www/app
    depends_on:
      - dynamodb
      - postgres
    links:
      - dynamodb
      - postgres
    networks:
      internal_net:
        ipv4_address: 172.21.1.2

  dynamodb:
    container_name: "dynamodb"
    image: amazon/dynamodb-local
    ports:
      - "8000:8000"
    networks:
      internal_net:
        ipv4_address: 172.21.1.1
    environment:
      - ./Djava.library.path=./DynamoDBLocal_lib
    volumes:
      - dynamodata:/home/dynamodblocal/
    working_dir: /home/dynamodblocal/
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ."

  postgres:
    container_name: "postgres"
    image: postgres
    ports:
      - "5432:5432"
    networks:
      internal_net:
        ipv4_address: 172.21.1.15
    environment:
      - POSTGRES_USER=auth
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=auth_db

networks:
  internal_net:
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16

volumes:
  dynamodata: